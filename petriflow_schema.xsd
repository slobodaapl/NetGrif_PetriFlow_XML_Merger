<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="xs3p.xsl"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           version="1.1.0">
    <!-- ===== DOCUMENT ELEMENTS ===== -->
    <xs:element name="transaction">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id"/>
                <xs:element ref="title"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="data">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id"/>
                <xs:element ref="title"/>
                <xs:element ref="placeholder" minOccurs="0"/>
                <xs:element ref="desc" minOccurs="0"/>
                <xs:choice>
                    <xs:element ref="values" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="options" minOccurs="0"/>
                </xs:choice>
                <xs:choice>
                    <xs:element ref="valid" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="validations" minOccurs="0"/>
                </xs:choice>
                <xs:element ref="init" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="format" minOccurs="0"/>
                <xs:choice>
                    <xs:element name="view" minOccurs="0" type="fieldView"/>
                </xs:choice>
                <xs:element type="component" name="component" minOccurs="0"/>
                <xs:element ref="encryption" minOccurs="0"/>
                <xs:choice>
                    <xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element type="dataEvent" name="event" maxOccurs="unbounded" minOccurs="0"/>
                </xs:choice>
                <xs:element ref="actionRef" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="documentRef" minOccurs="0"/>
                <xs:element ref="remote" minOccurs="0"/>
                <xs:element ref="length" minOccurs="0"/>
                <xs:element ref="allowedNets" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute type="data_type" name="type" use="required"/>
            <xs:attribute type="xs:boolean" name="immediate"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="role">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id"/>
                <xs:choice>
                    <xs:element ref="title"/>
                    <xs:element ref="name"/>
                </xs:choice>
                <xs:element ref="event" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="mapping">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id"/>
                <xs:element ref="transitionRef"/>
                <xs:element ref="roleRef" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="dataRef" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="dataGroup" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="trigger" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="transition">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id"/>
                <xs:element ref="x"/>
                <xs:element ref="y"/>
                <xs:element name="layout" minOccurs="0">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="cols" minOccurs="0"/>
                            <xs:element ref="rows" minOccurs="0"/>
                            <xs:element ref="offset" minOccurs="0"/>
                            <xs:element name="fieldAlignment" type="fieldAlignment" minOccurs="0"/>
                        </xs:sequence>
                        <xs:attribute name="type" type="layoutType"/>
                    </xs:complexType>
                </xs:element>
                <xs:element ref="label"/>
                <xs:element ref="icon" minOccurs="0"/>
                <xs:element ref="priority" minOccurs="0"/>
                <xs:element ref="assignPolicy" minOccurs="0"/>
                <xs:element ref="dataFocusPolicy" minOccurs="0"/>
                <xs:element ref="finishPolicy" minOccurs="0"/>
                <xs:element ref="trigger" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="transactionRef" minOccurs="0"/>
                <xs:element ref="roleRef" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element type="usersRef" name="usersRef" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="assignedUser" minOccurs="0"/>
                <xs:element ref="dataRef" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="dataGroup" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="event" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
        <xs:unique name="dataGroupUniqueId">
            <xs:selector xpath="./dataGroup"/>
            <xs:field xpath="id"/>
        </xs:unique>
    </xs:element>
    <xs:element name="place">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id"/>
                <xs:element ref="x"/>
                <xs:element ref="y"/>
                <xs:element ref="label"/>
                <xs:element ref="tokens"/>
                <xs:choice>
                    <xs:element ref="isStatic"/>
                    <xs:element ref="static"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="arc">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id"/>
                <xs:element name="type" type="arc_type" default="regular"/>
                <xs:element ref="sourceId"/>
                <xs:element ref="destinationId"/>
                <xs:element ref="multiplicity"/>
                <xs:element ref="breakPoint" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="i18n">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="i18nString" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="locale"/>
        </xs:complexType>
        <xs:unique name="i18nStringUniqueName">
            <xs:selector xpath="./i18nString"/>
            <xs:field xpath="@name"/>
        </xs:unique>
    </xs:element>
    <xs:element name="processEvents">
        <xs:complexType>
            <xs:sequence>
                <xs:element type="processEvent" name="event" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="caseEvents">
        <xs:complexType>
            <xs:sequence>
                <xs:element type="caseEvent" name="event" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="document">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id" minOccurs="1"/>
                <xs:element ref="version" minOccurs="0"/>
                <xs:element ref="initials" minOccurs="1"/>
                <xs:element name="title" minOccurs="1" type="i18nStringType"/>
                <xs:element ref="icon" minOccurs="0"/>
                <xs:element ref="defaultRole" minOccurs="0"/>
                <xs:element ref="transitionRole" minOccurs="0"/>
                <xs:element ref="caseName" minOccurs="0"/>
                <xs:element type="caseRoleRef" name="roleRef" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element type="caseUsersRef" name="usersRef" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="processEvents" minOccurs="0"/>
                <xs:element ref="caseEvents" minOccurs="0"/>
                <xs:element ref="transaction" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="role" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="data" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="mapping" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="i18n" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="transition" maxOccurs="unbounded"/>
                <xs:element ref="place" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="arc" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
        <xs:unique name="transitionUniqueId">
            <xs:selector xpath="./transition"/>
            <xs:field xpath="id"/>
        </xs:unique>
        <xs:unique name="placeUniqueId">
            <xs:selector xpath="./place"/>
            <xs:field xpath="id"/>
        </xs:unique>
        <xs:unique name="arcUniqueId">
            <xs:selector xpath="./arc"/>
            <xs:field xpath="id"/>
        </xs:unique>
        <xs:unique name="roleUniqueId">
            <xs:selector xpath="./role"/>
            <xs:field xpath="id"/>
        </xs:unique>
        <xs:unique name="dataUniqueId">
            <xs:selector xpath="./data"/>
            <xs:field xpath="id"/>
        </xs:unique>
        <xs:unique name="mappingId">
            <xs:selector xpath="./mapping"/>
            <xs:field xpath="id"/>
        </xs:unique>
        <xs:key name="ptIdKey">
            <xs:selector xpath="./place|./transition"/>
            <xs:field xpath="id"/>
        </xs:key>
        <!--todo:move validation to arc-->
        <xs:keyref name="sourceId" refer="ptIdKey">
            <xs:selector xpath="./arc"/>
            <xs:field xpath="sourceId"/>
        </xs:keyref>
        <xs:keyref name="destinationId" refer="ptIdKey">
            <xs:selector xpath="./arc"/>
            <xs:field xpath="destinationId"/>
        </xs:keyref>
    </xs:element>
    <!-- ===== RESTRICTIONS ===== -->
    <xs:simpleType name="data_type">
        <xs:restriction base="xs:string">
            <xs:enumeration value="number"/>
            <xs:enumeration value="text"/>
            <xs:enumeration value="enumeration"/>
            <xs:enumeration value="enumeration_map"/>
            <xs:enumeration value="multichoice"/>
            <xs:enumeration value="multichoice_map"/>
            <xs:enumeration value="boolean"/>
            <xs:enumeration value="date"/>
            <xs:enumeration value="file"/>
            <xs:enumeration value="fileList"/>
            <xs:enumeration value="user"/>
            <xs:enumeration value="userList"/>
            <xs:enumeration value="dateTime"/>
            <xs:enumeration value="button"/>
            <xs:enumeration value="taskRef"/>
            <xs:enumeration value="caseRef"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="arc_type">
        <xs:restriction base="xs:string">
            <xs:enumeration value="regular"/>
            <xs:enumeration value="reset"/>
            <xs:enumeration value="inhibitor"/>
            <xs:enumeration value="read"/>
            <xs:enumeration value="variable"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="validation">
        <xs:restriction base="xs:string">
            <!--todo: depending on data type-->
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="dataGroupAlignment">
        <xs:restriction base="xs:string">
            <xs:enumeration value="start"/>
            <xs:enumeration value="center"/>
            <xs:enumeration value="end"/>
            <xs:enumeration value="left"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="triggerType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="auto"/>
            <xs:enumeration value="user"/>
            <xs:enumeration value="time"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="assignPolicyType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="auto"/>
            <xs:enumeration value="manual"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="finishPolicyType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="auto_no_data"/>
            <xs:enumeration value="manual"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="nonNegativeLong">
        <xs:restriction base="xs:long">
            <xs:minInclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="nonNegativeInteger">
        <xs:restriction base="xs:int">
            <xs:minInclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="dataFocusPolicyType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="manual"/>
            <xs:enumeration value="auto_empty_required"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ===== INNER ELEMENTS ===== -->
    <xs:element name="x" type="nonNegativeInteger"/>
    <xs:element name="y" type="nonNegativeInteger"/>
    <xs:element name="cols" type="nonNegativeInteger"/>
    <xs:element name="rows" type="nonNegativeInteger"/>
    <xs:element name="offset" type="nonNegativeInteger"/>
    <xs:element name="template" type="templateType"/>
    <xs:simpleType name="templateType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="material"/>
            <xs:enumeration value="netgrif"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="appearance" type="appearanceType"/>
    <xs:simpleType name="appearanceType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="standard"/>
            <xs:enumeration value="outline"/>
            <xs:enumeration value="fill"/>
            <xs:enumeration value="legacy"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="label" type="i18nStringType"/>
    <xs:element name="tokens" type="nonNegativeInteger"/>
    <xs:element name="isStatic" type="xs:boolean"/>
    <xs:element name="static" type="xs:boolean"/>
    <xs:element name="type" type="xs:string"/>
    <xs:element name="sourceId" type="xs:string"/>
    <xs:element name="destinationId" type="xs:string"/>
    <xs:element name="multiplicity" type="nonNegativeInteger"/>
    <xs:element name="breakPoint">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="x"/>
                <xs:element ref="y"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="id" type="xs:string"/>
    <xs:element name="title" type="i18nStringType"/>
    <xs:element name="name" type="i18nStringType"/>
    <xs:element name="version" type="xs:string"/>
    <xs:element name="initials" type="initialsType"/>
    <xs:simpleType name="initialsType">
        <xs:restriction base="xs:string">
            <xs:length value="3"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="values" type="i18nStringType"/>
    <xs:element name="options">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="option" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="component">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="option">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="i18nStringType">
                    <xs:attribute name="key" type="xs:string" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="property">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="key" type="xs:string" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="allowedNets">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="allowedNet" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="allowedNet" type="xs:string"/>
    <xs:element name="perform" type="xs:boolean"/>
    <xs:element name="view" type="xs:boolean"/>
    <xs:element name="delegate" type="xs:boolean"/>
    <xs:element name="cancel" type="xs:boolean"/>
    <xs:element name="assigned" type="xs:boolean"/>
    <xs:element name="create" type="xs:boolean"/>
    <xs:element name="delete" type="xs:boolean"/>
    <xs:element name="reassign" type="xs:boolean"/>
    <xs:element name="logic">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="perform" minOccurs="0"/>
                <xs:element ref="delegate" minOccurs="0"/>
                <xs:element ref="view" minOccurs="0"/>
                <xs:element ref="cancel" minOccurs="0"/>
                <xs:element ref="assigned" minOccurs="0"/>
                <xs:element name="behavior" type="behavior" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="actionRef" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="caseLogic">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="create" minOccurs="0"/>
                <xs:element ref="delete" minOccurs="0"/>
                <xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="actionRef" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="transitionRef" type="xs:string"/>
    <xs:element name="transactionRef">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="roleRef">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id"/>
                <xs:element ref="logic"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="usersRef">
            <xs:sequence>
                <xs:element ref="id"/>
                <xs:element ref="logic"/>
            </xs:sequence>
    </xs:complexType>
    <xs:complexType name="caseRoleRef">
        <xs:sequence>
            <xs:element ref="id"/>
            <xs:element ref="caseLogic"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="caseUsersRef">
        <xs:sequence>
            <xs:element ref="id"/>
            <xs:element ref="caseLogic"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="behavior">
        <xs:restriction base="xs:string">
            <xs:enumeration value="forbidden"/>
            <xs:enumeration value="hidden"/>
            <xs:enumeration value="visible"/>
            <xs:enumeration value="editable"/>
            <xs:enumeration value="required"/>
            <xs:enumeration value="immediate"/>
            <xs:enumeration value="optional"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="dataRef">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id"/>
                <xs:element ref="logic"/>
                <xs:element ref="layout" minOccurs="0"/>
                <xs:element type="component" name="component" minOccurs="0"/>
                <xs:element type="dataEvent" name="event" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="layout">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="x" minOccurs="0"/>
                <xs:element ref="y" minOccurs="0"/>
                <xs:element ref="rows" minOccurs="0"/>
                <xs:element ref="cols" minOccurs="0"/>
                <xs:element ref="offset" minOccurs="0"/>
                <xs:element ref="template" minOccurs="0"/>
                <xs:element ref="appearance" minOccurs="0"/>
                <xs:element name="alignment" type="fieldAlignment" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="assignedUser">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="cancel" minOccurs="0"/>
                <xs:element ref="reassign" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:simpleType name="fieldAlignment">
        <xs:restriction base="xs:string">
            <xs:enumeration value="top"/>
            <xs:enumeration value="center"/>
            <xs:enumeration value="bottom"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="layoutType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="flow"/>
            <xs:enumeration value="grid"/>
            <xs:enumeration value="legacy"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="dataGroup">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="id"/>
                <xs:element ref="cols" minOccurs="0"/>
                <xs:element ref="rows" minOccurs="0"/>
                <xs:element name="layout" type="layoutType"/>
                <xs:element ref="title" minOccurs="0"/>
                <xs:element ref="alignment" minOccurs="0"/>
                <xs:element ref="stretch" minOccurs="0"/>
                <xs:element ref="dataRef" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="alignment" type="dataGroupAlignment"/>
    <xs:element name="action" type="actionType"/>
    <xs:complexType name="actionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="trigger"/>
                <xs:attribute name="id"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:element name="placeholder" type="i18nStringType"/>
    <xs:element name="valid" type="validation"/>
    <xs:element name="validations">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="validation" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="validation">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="expression" type="validation"/>
                <xs:element name="message" type="i18nStringType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="init" type="xs:string"/>
    <xs:simpleType name="remoteType">
        <xs:restriction base="xs:string">
            <xs:maxLength value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="remote" type="remoteType"/>
    <xs:element name="desc" type="i18nStringType"/>
    <xs:element name="priority" type="nonNegativeInteger"/>
    <xs:element name="trigger">
        <xs:complexType>
            <!--todo: only if time -->
            <xs:choice minOccurs="0">
                <xs:element name="exact" type="xs:dateTime"/>
                <xs:element name="delay" type="xs:duration"/>
            </xs:choice>
            <xs:attribute name="type" type="triggerType"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="stretch" type="xs:boolean"/>
    <xs:element name="icon" type="xs:string"/>
    <xs:element name="documentRef">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" type="nonNegativeLong"/>
                <xs:element name="fields" type="nonNegativeLong" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="encryption" type="encryptionType"/>
    <xs:complexType name="encryptionType">
        <xs:simpleContent>
            <xs:extension base="xs:boolean">
                <xs:attribute name="algorithm"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:element name="defaultRole" type="xs:boolean" default="true"/>
    <xs:element name="transitionRole" type="xs:boolean" default="true"/>
    <xs:element name="i18nString" type="i18nStringType"/>
    <xs:complexType name="i18nStringType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:element name="assignPolicy" type="assignPolicyType"/>
    <xs:element name="dataFocusPolicy" type="dataFocusPolicyType"/>
    <xs:element name="finishPolicy" type="finishPolicyType"/>
    <xs:element name="caseName" type="i18nStringType"/>
    <xs:element name="event">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="baseEvent">
                    <xs:sequence>
                        <xs:element ref="title" minOccurs="0"/>
                        <xs:element ref="message" minOccurs="0"/>
                    </xs:sequence>
                    <xs:attribute name="type" use="required" type="eventType"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="baseEvent">
        <xs:sequence>
            <xs:element ref="id"/>
            <xs:element ref="actions" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="dataEvent">
        <xs:complexContent>
            <xs:extension base="baseEvent">
                <xs:attribute name="type" use="required" type="dataEventType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="caseEvent">
        <xs:complexContent>
            <xs:extension base="baseEvent">
                <xs:attribute name="type" use="required" type="caseEventType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="processEvent">
        <xs:complexContent>
            <xs:extension base="baseEvent">
                <xs:attribute name="type" use="required" type="processEventType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="eventType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="assign"/>
            <xs:enumeration value="cancel"/>
            <xs:enumeration value="finish"/>
            <xs:enumeration value="delegate"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="dataEventType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="set"/>
            <xs:enumeration value="get"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="caseEventType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="create"/>
            <xs:enumeration value="delete"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="processEventType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="upload"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="eventPhaseType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="pre"/>
            <xs:enumeration value="post"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="actions">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="action" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="actionRef" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute type="eventPhaseType" name="phase" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="message" type="i18nStringType"/>
    <xs:element name="actionRef" type="actionRefType"/>
    <xs:complexType name="actionRefType">
        <xs:sequence>
            <xs:element ref="id"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fieldView">
        <xs:choice>
            <xs:element name="area" type="xs:string"/>
            <xs:element name="autocomplete" type="xs:string"/>
            <xs:element name="tree" type="xs:string"/>
            <xs:element name="table" type="xs:string"/>
            <xs:element name="image" type="booleanImageView"/>
            <xs:element name="editor"/>
            <xs:element name="htmlEditor"/>
            <xs:element name="buttonType">
                <xs:simpleType>
                    <xs:restriction base='xs:string'>
                        <xs:enumeration value="standard"/>
                        <xs:enumeration value="raised"/>
                        <xs:enumeration value="stroked"/>
                        <xs:enumeration value="flat"/>
                        <xs:enumeration value="icon"/>
                        <xs:enumeration value="fab"/>
                        <xs:enumeration value="minifab"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="list">
                <xs:simpleType>
                    <xs:union>
                        <xs:simpleType>
                            <xs:restriction base='xs:string'>
                                <xs:length value="0"/>
                            </xs:restriction>
                        </xs:simpleType>
                        <xs:simpleType>
                            <xs:restriction base='xs:int'/>
                        </xs:simpleType>
                    </xs:union>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="booleanImageView">
        <xs:sequence>
            <xs:element name="true" type="xs:string"/>
            <xs:element name="false" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="format">
        <xs:complexType>
            <xs:choice>
                <xs:element ref="currency"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <xs:element name="currency">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="code"/>
                <xs:element ref="fractionSize"/>
                <xs:element ref="locale"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="length" type="xs:int"/>
    <!-- ISO 4217 currency code -->
    <xs:element name="code" type="xs:string" default="EUR"/>
    <xs:element name="fractionSize" type="xs:int" default="2"/>
    <xs:element name="locale" type="xs:string"/>

    <!-- UTILS -->
    <xs:simpleType name="empty">
        <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>